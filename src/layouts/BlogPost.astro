---
import type { CollectionEntry } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';
import Tags from '../components/Tags.astro';
import { SITE_TITLE } from '@/consts';
import IconEdit from '@/components/icon/IconEdit.astro';

type Props = CollectionEntry<'blog'>['data'] & { editPage?: string; minsForReading?: number | string; wordsCount?: number | string; };

const { title, description, pubDate, updatedDate, heroImage, tags, editPage, minsForReading, wordsCount } =
  Astro.props;
const hasCategory = !!(
  await (Astro.slots.has('category') ? Astro.slots.render('category') : '')
).trim();
const hasEditPage = typeof editPage === 'string';
---

<html lang='zh-cn'>
  <head>
    <BaseHead title={`${title} | ${SITE_TITLE}`} description={description} />
  </head>
  <body>
    <Header class='fixed top-0 w-full z-10 h-[var(--header-height,3.5rem)]' />
    <div
      class='flex mx-auto sm:px-12 max-w-screen-xl pt-[var(--header-height,3.5rem)]'
    >
      <main class='flex-auto flex w-full py-6 px-6 min-w-0 >
        <article
          class:list={['only:justify-center overflow-hidden', 'mx-auto']}
          data-pagefind-body
          data-pagefind-meta={`pubDate: ${pubDate}, updatedDate: ${updatedDate}, type: blog}`}
        >
          <div class='w-full rounded-xl overflow-hidden'>
            {heroImage && <img class='min-w-[800px]' src={heroImage} alt='' />}
          </div>
          <div class='prose prose-stone sm:max-w-[calc(100%-2em)] m-auto my-4 sm:px-4'>
            <div class='mb-4 py-4 text-center leading-0'>
              <div class='text-gray-600 mb-2'>
                <FormattedDate date={pubDate} />
              </div>
              <h1 class='mb-2'>{title}</h1>
              {
                (minsForReading || wordsCount) && (
                  <aside class='text-sm text-gray-600'>
                    {wordsCount && <span>共 {wordsCount} 字{minsForReading && '，'}</span>}
                    {minsForReading && <span>{minsForReading}分钟读完</span>}
                  </aside>
                )
              }
              <hr />
            </div>
            <slot />
            <footer class='pt-8'>
              {
                tags && (
                  <div class='flex mb-4'>
                    <div class='flex-none'>标签：</div>
                    <Tags items={tags} />
                  </div>
                )
              }
              <div
                class:list={[
                  'flex flex-wrap gap-x-12 gap-y-4',
                  hasEditPage && 'justify-between',
                  !hasEditPage && 'justify-end',
                ]}
              >
                {
                  hasEditPage && (
                    <a
                      class='flex-none'
                      href={editPage}
                      target='_blank'
                      onclick={
                        editPage?.startsWith('/__open-in-editor')
                          ? `fetch(this.href); console.log(this, event); return false;`
                          : undefined
                      }
                    >
                      <IconEdit class='inline-block size-4 align-text-bottom mb-[2px]' />
                      <span> 编辑此页 </span>
                    </a>
                  )
                }
                {
                  !updatedDate && pubDate && (
                    <div class='italic flex-none text-nowrap text-right'>
                      最近更新于 <FormattedDate date={pubDate} />
                    </div>
                  )
                }
                {
                  updatedDate && (
                    <div class='italic'>
                      最近更新于 <FormattedDate date={updatedDate} />
                    </div>
                  )
                }
              </div>
            </footer>
          </div>
        </article>
      </main>
      {
        hasCategory && (
          <div class='flex-auto sticky w-[var(--sidebar-right-width,20rem)] self-start hidden mt-4 top-[calc(var(--header-height)+1rem)] px-2 border-l md:block'>
            <slot name='category' />
          </div>
        )
      }
    </div>
    <Footer />
  </body>
</html>

<style>
  @supports (scroll-padding-top: 0) {
    :root {
      scroll-padding-top: calc(var(--header-height) + 0.5rem);
    }
  }

  @supports not (scroll-padding-top: 0) {
    :global(:target::before) {
      display: block;
      content: '';
      margin-top: calc(var(--header-height) * -1 - 0.5rem);
      padding-top: calc(var(--header-height) + 0.5rem);
    }
  }
  


  /* 一些加强特性的 CSS */
  :global(body[prefer-tips]) article:target {
    animation: blink .8s ease-in-out 1;
  }

  @media screen and (prefers-reduced-motion: reduce) {
    :target {
      animation: none;
    }
  }

  @keyframes blink {
    0% {
      outline: transparent 1px solid;
      outline-offset: 0.2rem;
    }

    100% {
      outline: rgb(var(--color-accient) / 1) 1px solid;
      outline-offset: .2rem;
    }
  }
</style>