---
/**
 * 博客详情页面
 */

import BlogPost from '@/layouts/BlogPost.astro';
import Category from '@/components/feature/Category.astro';
import { blogsSortedByUpdateAndPubDate } from '../../utils/collection-blog';
import { fetchPackageJSON } from '@/utils/tools';
import { CONTENT_BLOG_DIR, IS_PROD } from '@/consts';
import { resolve } from 'path';

export const getStaticPaths = async function () {
  const posts = blogsSortedByUpdateAndPubDate;

  return [
    ...posts.map((post) => ({
      params: { slug: post.slug },
      props: { post },
    })),
  ];
};


const { post: { data, id, render } } = Astro.props;
const { Content, headings, remarkPluginFrontmatter, } = await render();
const { repository } = await fetchPackageJSON();
const contentDevURI = (resolve(CONTENT_BLOG_DIR, id)).replaceAll('\\', '\\\\');
const editPage = IS_PROD
  ? `${repository as string}/tree/master/src/content/blog/${id}`
  : `/__open-in-editor?file=${contentDevURI}`;
const { lastModified, msForReading, words } = remarkPluginFrontmatter;
const updateDate = lastModified ? new Date(lastModified) : data.updatedDate;
const minsForReading = !Number.isNaN(msForReading) ? Math.ceil(msForReading / 1000 / 60) : undefined;
const wordsCount = !Number.isNaN(words) ? words : undefined;
---
<!-- todo: tranform to local -->
<link
    rel="stylesheet"
    href="https://cdn.jsdelivr.net/npm/katex@0.15.2/dist/katex.min.css"
    integrity="sha384-MlJdn/WNKDGXveldHDdyRP1R4CTHr3FeuDNfhsLPYrq2t0UBkUdK2jyTnXPEK1NQ"
    crossorigin="anonymous"
/>

<BlogPost
 {...data}
 updatedDate={updateDate}
 minsForReading={minsForReading}
 wordsCount={wordsCount}
 title={`${data.title}`}
 editPage={editPage}
>
  <Content />
  {headings.length > 0 && <Category headings={headings} slot='category' />}
</BlogPost>
